# install python3.9 -> miniconda -> conda install -y jupyter
# Mac M1: conda env create -f torch-conda-nightly.yml -n torch
# NVIDIA CUDA GPU: conda env create -f torch-cuda.yml -n torch
# CPU Only: conda env create -f torch.yml -n torch
# conda activate torch
# Register your Environment: python -m ipykernel install --user --name pytorch --display-name "Python 3.9 (pytorch)"
# Testing your Environment: You can now start Jupyter notebook. Use the following command: jupyter notebook

name: torch
channels:
  - pytorch-nightly
  - conda-forge
dependencies:
    - python=3.9
    - pip>=19.0
    - pytorch 
    - torchvision 
    - jupyter
    - scikit-learn
    - scipy
    - pandas
    - pandas-datareader
    - matplotlib
    - pillow
    - tqdm
    - requests
    - h5py
    - pyyaml
    - flask
    - boto3
    - ipykernel
    - pip:
        - bayesian-optimization
        - gym
        - kaggle

"""
# What version of Python do you have?
import sys
import platform
import torch
import pandas as pd
import sklearn as sk

has_gpu = torch.cuda.is_available()
has_mps = getattr(torch,'has_mps',False)
device = "mps" if getattr(torch,'has_mps',False) \
    else "gpu" if torch.cuda.is_available() else "cpu"

print(f"Python Platform: {platform.platform()}")
print(f"PyTorch Version: {torch.__version__}")
print()
print(f"Python {sys.version}")
print(f"Pandas {pd.__version__}")
print(f"Scikit-Learn {sk.__version__}")
print("GPU is", "available" if has_gpu else "NOT AVAILABLE")
print("MPS (Apple Metal) is", "AVAILABLE" if has_mps else "NOT AVAILABLE")
print(f"Target device is {device}")

Python Platform: macOS-12.4-arm64-arm-64bit
PyTorch Version: 1.12.0.post2

Python 3.9.13 | packaged by conda-forge | (main, May 27 2022, 17:00:33) 
[Clang 13.0.1 ]
Pandas 1.4.3
Scikit-Learn 1.1.1
GPU is NOT AVAILABLE
MPS (Apple Metal) is available
Target device is mps
"""
